//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class AArteagaExamenSCISAEntities : DbContext
    {
        public AArteagaExamenSCISAEntities()
            : base("name=AArteagaExamenSCISAEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Cita> Cita { get; set; }
        public virtual DbSet<Doctor> Doctor { get; set; }
        public virtual DbSet<Especialidad> Especialidad { get; set; }
        public virtual DbSet<Paciente> Paciente { get; set; }
        public virtual DbSet<Usuario> Usuario { get; set; }
    
        public virtual int CitaAdd(string fechaCita, string horaCita, Nullable<int> id_Doctor, Nullable<int> id_Paciente)
        {
            var fechaCitaParameter = fechaCita != null ?
                new ObjectParameter("FechaCita", fechaCita) :
                new ObjectParameter("FechaCita", typeof(string));
    
            var horaCitaParameter = horaCita != null ?
                new ObjectParameter("HoraCita", horaCita) :
                new ObjectParameter("HoraCita", typeof(string));
    
            var id_DoctorParameter = id_Doctor.HasValue ?
                new ObjectParameter("Id_Doctor", id_Doctor) :
                new ObjectParameter("Id_Doctor", typeof(int));
    
            var id_PacienteParameter = id_Paciente.HasValue ?
                new ObjectParameter("Id_Paciente", id_Paciente) :
                new ObjectParameter("Id_Paciente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CitaAdd", fechaCitaParameter, horaCitaParameter, id_DoctorParameter, id_PacienteParameter);
        }
    
        public virtual int CitaDelete(Nullable<int> id_Cita)
        {
            var id_CitaParameter = id_Cita.HasValue ?
                new ObjectParameter("Id_Cita", id_Cita) :
                new ObjectParameter("Id_Cita", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CitaDelete", id_CitaParameter);
        }
    
        public virtual int CitaUpdate(Nullable<int> id_Cita, string fechaCita, string horaCita, Nullable<int> id_Doctor, Nullable<int> id_Paciente)
        {
            var id_CitaParameter = id_Cita.HasValue ?
                new ObjectParameter("Id_Cita", id_Cita) :
                new ObjectParameter("Id_Cita", typeof(int));
    
            var fechaCitaParameter = fechaCita != null ?
                new ObjectParameter("FechaCita", fechaCita) :
                new ObjectParameter("FechaCita", typeof(string));
    
            var horaCitaParameter = horaCita != null ?
                new ObjectParameter("HoraCita", horaCita) :
                new ObjectParameter("HoraCita", typeof(string));
    
            var id_DoctorParameter = id_Doctor.HasValue ?
                new ObjectParameter("Id_Doctor", id_Doctor) :
                new ObjectParameter("Id_Doctor", typeof(int));
    
            var id_PacienteParameter = id_Paciente.HasValue ?
                new ObjectParameter("Id_Paciente", id_Paciente) :
                new ObjectParameter("Id_Paciente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CitaUpdate", id_CitaParameter, fechaCitaParameter, horaCitaParameter, id_DoctorParameter, id_PacienteParameter);
        }
    
        public virtual int DoctorAdd(string nombre, string apellidoPaterno, string apellidoMaterno, string cedula, string fotografia, Nullable<int> id_Especialidad)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoPaternoParameter = apellidoPaterno != null ?
                new ObjectParameter("ApellidoPaterno", apellidoPaterno) :
                new ObjectParameter("ApellidoPaterno", typeof(string));
    
            var apellidoMaternoParameter = apellidoMaterno != null ?
                new ObjectParameter("ApellidoMaterno", apellidoMaterno) :
                new ObjectParameter("ApellidoMaterno", typeof(string));
    
            var cedulaParameter = cedula != null ?
                new ObjectParameter("Cedula", cedula) :
                new ObjectParameter("Cedula", typeof(string));
    
            var fotografiaParameter = fotografia != null ?
                new ObjectParameter("Fotografia", fotografia) :
                new ObjectParameter("Fotografia", typeof(string));
    
            var id_EspecialidadParameter = id_Especialidad.HasValue ?
                new ObjectParameter("Id_Especialidad", id_Especialidad) :
                new ObjectParameter("Id_Especialidad", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DoctorAdd", nombreParameter, apellidoPaternoParameter, apellidoMaternoParameter, cedulaParameter, fotografiaParameter, id_EspecialidadParameter);
        }
    
        public virtual int DoctorDelete(Nullable<int> id_Doctor)
        {
            var id_DoctorParameter = id_Doctor.HasValue ?
                new ObjectParameter("Id_Doctor", id_Doctor) :
                new ObjectParameter("Id_Doctor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DoctorDelete", id_DoctorParameter);
        }
    
        public virtual ObjectResult<DoctorGetAll_Result> DoctorGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DoctorGetAll_Result>("DoctorGetAll");
        }
    
        public virtual int EspecialidadAdd(string descripcion)
        {
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EspecialidadAdd", descripcionParameter);
        }
    
        public virtual int EspecialidadDelete(Nullable<int> id_Especialidad)
        {
            var id_EspecialidadParameter = id_Especialidad.HasValue ?
                new ObjectParameter("Id_Especialidad", id_Especialidad) :
                new ObjectParameter("Id_Especialidad", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EspecialidadDelete", id_EspecialidadParameter);
        }
    
        public virtual ObjectResult<EspecialidadGetAll_Result> EspecialidadGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EspecialidadGetAll_Result>("EspecialidadGetAll");
        }
    
        public virtual int EspecialidadUpdate(Nullable<int> id_Especialidad, string descripcion)
        {
            var id_EspecialidadParameter = id_Especialidad.HasValue ?
                new ObjectParameter("Id_Especialidad", id_Especialidad) :
                new ObjectParameter("Id_Especialidad", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EspecialidadUpdate", id_EspecialidadParameter, descripcionParameter);
        }
    
        public virtual int PacienteAdd(string nombre, string apellidoPaterno, string apellidoMaterno, string fechaNacimiento, string cURP, string nSS, string sexo, string telefono, string direccion, string codigoPostal, string diagnostico)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoPaternoParameter = apellidoPaterno != null ?
                new ObjectParameter("ApellidoPaterno", apellidoPaterno) :
                new ObjectParameter("ApellidoPaterno", typeof(string));
    
            var apellidoMaternoParameter = apellidoMaterno != null ?
                new ObjectParameter("ApellidoMaterno", apellidoMaterno) :
                new ObjectParameter("ApellidoMaterno", typeof(string));
    
            var fechaNacimientoParameter = fechaNacimiento != null ?
                new ObjectParameter("FechaNacimiento", fechaNacimiento) :
                new ObjectParameter("FechaNacimiento", typeof(string));
    
            var cURPParameter = cURP != null ?
                new ObjectParameter("CURP", cURP) :
                new ObjectParameter("CURP", typeof(string));
    
            var nSSParameter = nSS != null ?
                new ObjectParameter("NSS", nSS) :
                new ObjectParameter("NSS", typeof(string));
    
            var sexoParameter = sexo != null ?
                new ObjectParameter("Sexo", sexo) :
                new ObjectParameter("Sexo", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("Direccion", direccion) :
                new ObjectParameter("Direccion", typeof(string));
    
            var codigoPostalParameter = codigoPostal != null ?
                new ObjectParameter("CodigoPostal", codigoPostal) :
                new ObjectParameter("CodigoPostal", typeof(string));
    
            var diagnosticoParameter = diagnostico != null ?
                new ObjectParameter("Diagnostico", diagnostico) :
                new ObjectParameter("Diagnostico", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PacienteAdd", nombreParameter, apellidoPaternoParameter, apellidoMaternoParameter, fechaNacimientoParameter, cURPParameter, nSSParameter, sexoParameter, telefonoParameter, direccionParameter, codigoPostalParameter, diagnosticoParameter);
        }
    
        public virtual int PacienteDelete(Nullable<int> id_Paciente)
        {
            var id_PacienteParameter = id_Paciente.HasValue ?
                new ObjectParameter("Id_Paciente", id_Paciente) :
                new ObjectParameter("Id_Paciente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PacienteDelete", id_PacienteParameter);
        }
    
        public virtual ObjectResult<PacienteGetAll_Result> PacienteGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PacienteGetAll_Result>("PacienteGetAll");
        }
    
        public virtual int PacienteUpdate(Nullable<int> id_Paciente, string nombre, string apellidoPaterno, string apellidoMaterno, string fechaNacimiento, string cURP, string nSS, string sexo, string telefono, string direccion, string codigoPostal, string diagnostico)
        {
            var id_PacienteParameter = id_Paciente.HasValue ?
                new ObjectParameter("Id_Paciente", id_Paciente) :
                new ObjectParameter("Id_Paciente", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoPaternoParameter = apellidoPaterno != null ?
                new ObjectParameter("ApellidoPaterno", apellidoPaterno) :
                new ObjectParameter("ApellidoPaterno", typeof(string));
    
            var apellidoMaternoParameter = apellidoMaterno != null ?
                new ObjectParameter("ApellidoMaterno", apellidoMaterno) :
                new ObjectParameter("ApellidoMaterno", typeof(string));
    
            var fechaNacimientoParameter = fechaNacimiento != null ?
                new ObjectParameter("FechaNacimiento", fechaNacimiento) :
                new ObjectParameter("FechaNacimiento", typeof(string));
    
            var cURPParameter = cURP != null ?
                new ObjectParameter("CURP", cURP) :
                new ObjectParameter("CURP", typeof(string));
    
            var nSSParameter = nSS != null ?
                new ObjectParameter("NSS", nSS) :
                new ObjectParameter("NSS", typeof(string));
    
            var sexoParameter = sexo != null ?
                new ObjectParameter("Sexo", sexo) :
                new ObjectParameter("Sexo", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("Direccion", direccion) :
                new ObjectParameter("Direccion", typeof(string));
    
            var codigoPostalParameter = codigoPostal != null ?
                new ObjectParameter("CodigoPostal", codigoPostal) :
                new ObjectParameter("CodigoPostal", typeof(string));
    
            var diagnosticoParameter = diagnostico != null ?
                new ObjectParameter("Diagnostico", diagnostico) :
                new ObjectParameter("Diagnostico", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PacienteUpdate", id_PacienteParameter, nombreParameter, apellidoPaternoParameter, apellidoMaternoParameter, fechaNacimientoParameter, cURPParameter, nSSParameter, sexoParameter, telefonoParameter, direccionParameter, codigoPostalParameter, diagnosticoParameter);
        }
    
        public virtual ObjectResult<DoctorGetById_Result> DoctorGetById(Nullable<int> id_Doctor)
        {
            var id_DoctorParameter = id_Doctor.HasValue ?
                new ObjectParameter("Id_Doctor", id_Doctor) :
                new ObjectParameter("Id_Doctor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DoctorGetById_Result>("DoctorGetById", id_DoctorParameter);
        }
    
        public virtual ObjectResult<PacienteGetById_Result> PacienteGetById(Nullable<int> id_Paciente)
        {
            var id_PacienteParameter = id_Paciente.HasValue ?
                new ObjectParameter("Id_Paciente", id_Paciente) :
                new ObjectParameter("Id_Paciente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PacienteGetById_Result>("PacienteGetById", id_PacienteParameter);
        }
    
        public virtual int DoctorUpdate(Nullable<int> id_Doctor, string nombre, string apellidoPaterno, string apellidoMaterno, string cedula, string fotografia, Nullable<int> id_Especialidad)
        {
            var id_DoctorParameter = id_Doctor.HasValue ?
                new ObjectParameter("Id_Doctor", id_Doctor) :
                new ObjectParameter("Id_Doctor", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoPaternoParameter = apellidoPaterno != null ?
                new ObjectParameter("ApellidoPaterno", apellidoPaterno) :
                new ObjectParameter("ApellidoPaterno", typeof(string));
    
            var apellidoMaternoParameter = apellidoMaterno != null ?
                new ObjectParameter("ApellidoMaterno", apellidoMaterno) :
                new ObjectParameter("ApellidoMaterno", typeof(string));
    
            var cedulaParameter = cedula != null ?
                new ObjectParameter("Cedula", cedula) :
                new ObjectParameter("Cedula", typeof(string));
    
            var fotografiaParameter = fotografia != null ?
                new ObjectParameter("Fotografia", fotografia) :
                new ObjectParameter("Fotografia", typeof(string));
    
            var id_EspecialidadParameter = id_Especialidad.HasValue ?
                new ObjectParameter("Id_Especialidad", id_Especialidad) :
                new ObjectParameter("Id_Especialidad", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DoctorUpdate", id_DoctorParameter, nombreParameter, apellidoPaternoParameter, apellidoMaternoParameter, cedulaParameter, fotografiaParameter, id_EspecialidadParameter);
        }
    
        public virtual ObjectResult<CitaGetAll_Result> CitaGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CitaGetAll_Result>("CitaGetAll");
        }
    
        public virtual ObjectResult<CitaGetById_Result> CitaGetById(Nullable<int> id_Cita)
        {
            var id_CitaParameter = id_Cita.HasValue ?
                new ObjectParameter("Id_Cita", id_Cita) :
                new ObjectParameter("Id_Cita", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CitaGetById_Result>("CitaGetById", id_CitaParameter);
        }
    
        public virtual ObjectResult<LoginU_Result> LoginU(string username, string password)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LoginU_Result>("LoginU", usernameParameter, passwordParameter);
        }
    }
}
